<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

//number of cells
n_cells = obj_control.n_cells
//vertical and Horizontal distance between cells
d_cells = room_height/n_cells
//view cells
vc = obj_control.vc
//variable that determines the state of the game, paused or not
pause = true
//view data
adminmode = false
//variables for mouse position
xx = 0
yy = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Array creation
for (i=0; i&lt;n_cells; i+=1)
{
    for (g=0; g&lt;n_cells; g+=1)
    {
        array[i,g]=0
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The whole process

array2 = array

for (i=0; i&lt;n_cells; i+=1)
{
    for (g=0; g&lt;n_cells; g+=1)
    {
    
        //apply the rules of the game of life
    
        n_l = array[((n_cells+(i-1)) % n_cells ),((n_cells+(g-1)) % n_cells)] + array[(i),((n_cells+(g-1)) % n_cells)] +
        array[((n_cells+(i+1)) % n_cells ),((n_cells+(g-1)) % n_cells)] + array[((n_cells+(i-1)) % n_cells ),(g)] +
        array[((n_cells+(i+1)) % n_cells ),(g)] + array[((n_cells+(i-1)) % n_cells ),((n_cells+(g+1)) % n_cells)] + 
        array[(i),((n_cells+(g+1)) % n_cells)] + array[((n_cells+(i+1)) % n_cells ),((n_cells+(g+1)) % n_cells)]

        if (n_l &gt; 3 or n_l &lt; 2){
            array2[i,g] = 0  
        }
         
        if (n_l == 3){
            array2[i,g] = 1
        }      
        
        
        n_l = 0
        
    };
    
    
}

array = array2

if !pause{
    alarm[0]=1
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keys and options

//change cell state with mouse

if mouse_check_button(mb_left){
    script_execute(scr_state,1)    
}else if mouse_check_button(mb_right){
    script_execute(scr_state,0)    
}

//Pause or play the game

if keyboard_check_pressed(vk_space){
    pause = !pause
    alarm[0]=1
}

//Reset game

if keyboard_check_pressed (vk_escape){
    game_restart()
}

//call the process once

if keyboard_check_pressed(vk_right) and pause{
    alarm[0]=1
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///adminmode

//calculate the number of living cells

if adminmode{
nll = 0

for (i=0; i&lt;n_cells; i+=1)
{
    for (g=0; g&lt;n_cells; g+=1)
    {
    
        if (array[i,g] == 1){
            nll +=1
        }
            
    };
    
    
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI drawing

//adminmode

if adminmode{

draw_set_font(f0)
draw_set_color(c_black)
draw_set_alpha(.25)
draw_rectangle(0,0,room_width,room_height/8,0)
draw_set_color(c_white)
draw_set_alpha(1)
draw_set_halign(fa_left)

draw_text(20,20,fps)
draw_text(20,40,nll)

draw_text(80,60,xx)
draw_text(80,80,yy)

}

//Draw pause or play

draw_set_alpha(.25)
draw_set_color(c_white)
draw_set_halign(fa_center)
draw_set_font(f1)

if pause{

    draw_text(250,250,"Pause")

}else{

    draw_text(250,250,"Play")

}

draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing

//Drawing of living cells

for (i=0; i&lt;n_cells; i+=1){
    for (g=0; g&lt;n_cells; g+=1){       
        if (array[i,g] == 1){
            draw_set_colour(c_white)
            draw_set_alpha(1)
            draw_rectangle(i*d_cells,g*d_cells,i*d_cells+d_cells,g*d_cells+d_cells,0)
        }
    };  
}

    
if vc{ 

    //Draw the vertical lines
   
    draw_set_color(c_white)
    draw_set_alpha(.5)
    
    for (i=0; i&lt;n_cells+1; i+=1)
    {  
        if n_cells &lt;= i{
            draw_line(d_cells*i-1,0,d_cells*i-1,room_height)
        }else{
            draw_line(d_cells*i,0,d_cells*i,room_height)
        }
    };
    
    //Draw the Horizontal lines
    
    for (i=0; i&lt;n_cells+1; i+=1)
    {  
    
        if n_cells &lt;= i{
            draw_line(0,d_cells*i-1,room_width,d_cells*i-1)
        }else{
            draw_line(0,d_cells*i,room_width,d_cells*i)
        }
    };
    
    draw_set_alpha(1)

}     
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///change adminmode

adminmode = !adminmode
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
